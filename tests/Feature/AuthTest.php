<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;
use Laravel\Passport\ClientRepository;
use App\Models\User;
use Illuminate\Support\Facades\DB;
use DateTime;

class AuthTest extends TestCase
{
    protected $headers = [];
    protected $scopes = [];
    protected $user;

    public function setUp(): void
    {
        parent::setUp();
        $clientRepository = new ClientRepository();
        $client = $clientRepository->createPersonalAccessClient(
            null, 'Test Personal Access Client', url('/')
        );
        DB::table('oauth_personal_access_clients')->insert([
            'client_id' => $client->id,
            'created_at' => new DateTime(),
            'updated_at' => new DateTime,
        ]);

        $this->user = factory(User::class)->create();

        $token = $this->user->createToken('TestToken', $this->scopes)->accessToken;
        $this->headers['Accept'] = 'application/json';
        $this->headers['Authorization'] = 'Bearer ' . $token;
    }

//    public  function tearDown(): void
//    {
//        parent::tearDown(); // TODO: Change the autogenerated stub
//    }

    public function testOauthLogin()
    {
        $client_id = config('lighthouse-graphql-passport.client_id');
        $client_secret = config('lighthouse-graphql-passport.client_secret');

        $body = [
            'username' => 'admin@gmail.com',
            'password' => 'secret',
            'client_id' => $client_id,
            'client_secret' => $client_secret,
            'grant_type' => 'password',
            'scope' => '*'
        ];
        $this->json('POST', '/oauth/token', $body, ['Accept' => 'application/json'])
            ->assertStatus(200)
            ->assertJsonStructure(['token_type', 'expires_in', 'access_token', 'refresh_token']);
    }
//
//    public function testOauthLogout()
//    {
//
//    }
}
